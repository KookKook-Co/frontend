import Container from 'react-bootstrap/Container';
import React from 'react';
import styles from './index.module.scss';

const square = isChickenDead => {
    return (
        <div
            className={`${styles.square} ${
                isChickenDead ? `${styles.red}` : ''
            }`}
        ></div>
    );
};

const eachrow = (row, num) => {
    return (
        <div className={styles.rowDeadChickenMap}>
            <p
                className={styles.mapLabel}
                style={{ marginRight: '0.9rem', width: '0.3rem' }}
            >
                {num}
            </p>
            {square(row[0])}
            <div className={`${styles.square} ${styles.waterLine}`}></div>
            {square(row[1])}
            <div className={`${styles.square} ${styles.foodLine}`}></div>
            {square(row[2])}
            <div className={`${styles.square} ${styles.waterLine}`}></div>
            {square(row[3])}
            <div className={`${styles.square} ${styles.foodLine}`}></div>
            {square(row[4])}
            <div className={`${styles.square} ${styles.waterLine}`}></div>
            {square(row[5])}
            <div className={`${styles.square} ${styles.foodLine}`}></div>
            {square(row[6])}
            <div className={`${styles.square} ${styles.waterLine}`}></div>
            {square(row[7])}
            <div className={`${styles.square} ${styles.foodLine}`}></div>
            {square(row[8])}
            <div className={`${styles.square} ${styles.waterLine}`}></div>
            {square(row[9])}
            <div className={`${styles.square} ${styles.foodLine}`}></div>
            {square(row[10])}
            <div className={`${styles.square} ${styles.waterLine}`}></div>
            {square(row[11])}
            <div className={`${styles.square} ${styles.foodLine}`}></div>
            {square(row[12])}
            <div className={`${styles.square} ${styles.waterLine}`}></div>
            {square(row[13])}
        </div>
    );
};

const colLabel = char => {
    return (
        <div
            className={styles.mapLabel}
            style={{
                marginBottom: '0.4rem',
                marginLeft: '0.35rem',
                width: '5%',
                float: 'left',
            }}
        >
            {char}
        </div>
    );
};

const DeadChicken = () => {
    const zoneStatus = [
        [
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
    ];
    const chars = [
        'A',
        'B',
        'C',
        'D',
        'E',
        'F',
        'G',
        'H',
        'I',
        'J',
        'K',
        'L',
        'M',
        'N',
    ];
    return (
        <Container>
            <div className={styles.textLabelCh} style={{ marginTop: '2.5rem' }}>
                <p>Please select on dead chicken location</p>
            </div>
            <div className={styles.map}>
                {chars.map(char => colLabel(char))}
                {zoneStatus.map(row => eachrow(row, zoneStatus.indexOf(row)))}
            </div>
        </Container>
    );
};

export default DeadChicken;
