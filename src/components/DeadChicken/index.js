import React, { useState } from 'react';
import Container from 'react-bootstrap/Container';
import './index.scss';

const square = isChickenDead => {
    return <div className={`square ${isChickenDead ? 'red' : ''}`}></div>;
};

const eachrow = row => {
    return (
        <div className="row">
            <p className="map-label" style={{ marginRight: '0.5rem' }}>
                1
            </p>
            {square(row[0])}
            <div className="square water-line"></div>
            {square(row[1])}
            <div className="square food-line"></div>
            {square(row[2])}
            <div className="square water-line"></div>
            {square(row[3])}
            <div className="square food-line"></div>
            {square(row[4])}
            <div className="square water-line"></div>
            {square(row[5])}
            <div className="square food-line"></div>
            {square(row[6])}
            <div className="square water-line"></div>
            {square(row[7])}
            <div className="square food-line"></div>
            {square(row[8])}
            <div className="square water-line"></div>
            {square(row[9])}
            <div className="square food-line"></div>
            {square(row[10])}
            <div className="square water-line"></div>
            {square(row[11])}
            <div className="square food-line"></div>
            {square(row[12])}
            <div className="square water-line"></div>
            {square(row[13])}
        </div>
    );
};

const colLabel = char => {
    return (
        <div
            className="map-label"
            style={{
                marginBottom: '0.4rem',
                marginRight: '0.333rem',
                width: '5%',
                float: 'left',
            }}
        >
            {char}
        </div>
    );
};

const DeadChicken = () => {
    const zoneStatus = [
        [
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
        ],
    ];
    const chars = [
        'A',
        'B',
        'C',
        'D',
        'E',
        'F',
        'G',
        'H',
        'I',
        'J',
        'K',
        'L',
        'M',
        'N',
    ];
    return (
        <Container>
            <div className="text-label-ch" style={{ marginTop: '2.5rem' }}>
                <p>Please select on dead chicken location</p>
            </div>

            <div className="map">
                {chars.map(char => colLabel(char))}
                {zoneStatus.map(row => eachrow(row))}
            </div>
        </Container>
    );
};

export default DeadChicken;
